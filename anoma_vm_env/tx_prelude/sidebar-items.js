initSidebarItems({"attr":[["transaction","This macro expects a function with signature:"]],"constant":[["BLOCK_HASH_LENGTH",""],["CHAIN_ID_LENGTH",""],["KEY_SEGMENT_SEPARATOR",""],["RESERVED_ADDRESS_PREFIX",""],["RESERVED_VP_KEY",""],["VP_KEY_PREFIX",""]],"derive":[["BorshDeserialize",""],["BorshSerialize",""]],"enum":[["Address",""],["DbKeySeg",""],["Error",""],["ImplicitAddress",""]],"fn":[["delete","Delete a value at the given key from storage."],["get_block_hash","Get a block hash"],["get_block_height","Get the committed block height"],["get_chain_id","Get the chain ID"],["has_key","Check if the given key is present in storage."],["init_account",""],["insert_verifier","Insert a verifier"],["iter_prefix","Get an iterator with the given prefix"],["log_string","Log a string. The message will be printed at the `tracing::Level::Info`."],["read","Try to read a variable-length value at the given key from storage."],["size_of","Returns the size of a type in bytes."],["update_validity_predicate","Update a validity predicate"],["write","Write a value at the given key to storage."]],"mod":[["address","Implements transparent addresses as described in Accounts Addresses."],["intent",""],["intent",""],["internal","Shared internal types between the host env and guest (wasm)."],["key",""],["slice","Slice management and manipulation."],["token",""],["token","A basic fungible token"],["vm_memory","Memory types can be passed between the host and guest via wasm linear memory."]],"struct":[["BlockHash",""],["BlockHeight",""],["EstablishedAddress",""],["Key",""],["KeyValIterator",""],["UpdateVp","A tx data type to update an accountâ€™s validity predicate"]],"trait":[["BorshDeserialize","A data-structure that can be de-serialized from binary format by NBOR."],["BorshSerialize","A data-structure that can be serialized into binary format by NBOR."],["KeySeg","Represents a segment in a path that may be used as a database key"]],"type":[["Result",""]]});
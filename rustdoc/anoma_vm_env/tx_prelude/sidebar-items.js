initSidebarItems({"attr":[["transaction","This macro expects a function with signature:"]],"constant":[["BLOCK_HASH_LENGTH","The length of the block’s hash string"],["CHAIN_ID_LENGTH","The length of chain ID string"],["KEY_SEGMENT_SEPARATOR","The separator of storage key segments"],["RESERVED_ADDRESS_PREFIX","The reserved storage key prefix for addresses"],["RESERVED_VP_KEY","The reserved storage key for validity predicates"],["VP_KEY_PREFIX","The reserved storage key prefix for validity predicates"]],"enum":[["Address","An account’s address"],["DbKeySeg","A storage key segment"],["Error",""],["ImplicitAddress","An implicit address is derived from a cryptographic key"]],"mod":[["address","Implements transparent addresses as described in Accounts Addresses."],["intent",""],["intent","Intent data definitions and transaction and validity-predicate helpers."],["internal","Shared internal types between the host env and guest (wasm)."],["key","Cryptographic keys"],["token",""],["token","A basic fungible token"]],"struct":[["BlockHash","Hash of a block as fixed-size byte array"],["BlockHeight","Height of a block, i.e. the level."],["EstablishedAddress","An established address is generated on-chain"],["Key","A storage key is made of storage key segments [`DbKeySeg`], separated by [`KEY_SEGMENT_SEPARATOR`]."],["UpdateVp","A tx data type to update an account’s validity predicate"]],"trait":[["KeySeg","Represents a segment in a path that may be used as a database key"]],"type":[["Result","Result for functions that may fail"]]});
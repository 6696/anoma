(function() {var implementors = {};
implementors["anoma_shared"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"anoma_shared/types/address/enum.Error.html\" title=\"enum anoma_shared::types::address::Error\">Error</a>","synthetic":false,"types":["anoma_shared::types::address::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"anoma_shared/types/address/enum.Address.html\" title=\"enum anoma_shared::types::address::Address\">Address</a>","synthetic":false,"types":["anoma_shared::types::address::Address"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/address/struct.EstablishedAddress.html\" title=\"struct anoma_shared::types::address::EstablishedAddress\">EstablishedAddress</a>","synthetic":false,"types":["anoma_shared::types::address::EstablishedAddress"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/address/struct.EstablishedAddressGen.html\" title=\"struct anoma_shared::types::address::EstablishedAddressGen\">EstablishedAddressGen</a>","synthetic":false,"types":["anoma_shared::types::address::EstablishedAddressGen"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"anoma_shared/types/address/enum.ImplicitAddress.html\" title=\"enum anoma_shared::types::address::ImplicitAddress\">ImplicitAddress</a>","synthetic":false,"types":["anoma_shared::types::address::ImplicitAddress"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/intent/struct.Intent.html\" title=\"struct anoma_shared::types::intent::Intent\">Intent</a>","synthetic":false,"types":["anoma_shared::types::intent::Intent"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/intent/struct.IntentTransfers.html\" title=\"struct anoma_shared::types::intent::IntentTransfers\">IntentTransfers</a>","synthetic":false,"types":["anoma_shared::types::intent::IntentTransfers"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"anoma_shared/types/internal/enum.HostEnvResult.html\" title=\"enum anoma_shared::types::internal::HostEnvResult\">HostEnvResult</a>","synthetic":false,"types":["anoma_shared::types::internal::HostEnvResult"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/key/ed25519/struct.PublicKey.html\" title=\"struct anoma_shared::types::key::ed25519::PublicKey\">PublicKey</a>","synthetic":false,"types":["anoma_shared::types::key::ed25519::PublicKey"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/key/ed25519/struct.Signature.html\" title=\"struct anoma_shared::types::key::ed25519::Signature\">Signature</a>","synthetic":false,"types":["anoma_shared::types::key::ed25519::Signature"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/key/ed25519/struct.PublicKeyHash.html\" title=\"struct anoma_shared::types::key::ed25519::PublicKeyHash\">PublicKeyHash</a>","synthetic":false,"types":["anoma_shared::types::key::ed25519::PublicKeyHash"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"anoma_shared/types/key/ed25519/enum.VerifySigError.html\" title=\"enum anoma_shared::types::key::ed25519::VerifySigError\">VerifySigError</a>","synthetic":false,"types":["anoma_shared::types::key::ed25519::VerifySigError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/key/ed25519/struct.SignedTxData.html\" title=\"struct anoma_shared::types::key::ed25519::SignedTxData\">SignedTxData</a>","synthetic":false,"types":["anoma_shared::types::key::ed25519::SignedTxData"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + BorshSerialize + BorshDeserialize&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/key/ed25519/struct.Signed.html\" title=\"struct anoma_shared::types::key::ed25519::Signed\">Signed</a>&lt;T&gt;","synthetic":false,"types":["anoma_shared::types::key::ed25519::Signed"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/token/struct.Amount.html\" title=\"struct anoma_shared::types::token::Amount\">Amount</a>","synthetic":false,"types":["anoma_shared::types::token::Amount"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/token/struct.Transfer.html\" title=\"struct anoma_shared::types::token::Transfer\">Transfer</a>","synthetic":false,"types":["anoma_shared::types::token::Transfer"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"anoma_shared/types/enum.Error.html\" title=\"enum anoma_shared::types::Error\">Error</a>","synthetic":false,"types":["anoma_shared::types::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/struct.BlockHeight.html\" title=\"struct anoma_shared::types::BlockHeight\">BlockHeight</a>","synthetic":false,"types":["anoma_shared::types::BlockHeight"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/struct.Key.html\" title=\"struct anoma_shared::types::Key\">Key</a>","synthetic":false,"types":["anoma_shared::types::Key"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"anoma_shared/types/enum.DbKeySeg.html\" title=\"enum anoma_shared::types::DbKeySeg\">DbKeySeg</a>","synthetic":false,"types":["anoma_shared::types::DbKeySeg"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/struct.BlockHash.html\" title=\"struct anoma_shared::types::BlockHash\">BlockHash</a>","synthetic":false,"types":["anoma_shared::types::BlockHash"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/types/struct.UpdateVp.html\" title=\"struct anoma_shared::types::UpdateVp\">UpdateVp</a>","synthetic":false,"types":["anoma_shared::types::UpdateVp"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.KeyVal.html\" title=\"struct anoma_shared::vm_memory::KeyVal\">KeyVal</a>","synthetic":false,"types":["anoma_shared::vm_memory::KeyVal"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.StorageReadInput.html\" title=\"struct anoma_shared::vm_memory::StorageReadInput\">StorageReadInput</a>","synthetic":false,"types":["anoma_shared::vm_memory::StorageReadInput"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.StorageReadOutput.html\" title=\"struct anoma_shared::vm_memory::StorageReadOutput\">StorageReadOutput</a>","synthetic":false,"types":["anoma_shared::vm_memory::StorageReadOutput"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.StorageHasKeyInput.html\" title=\"struct anoma_shared::vm_memory::StorageHasKeyInput\">StorageHasKeyInput</a>","synthetic":false,"types":["anoma_shared::vm_memory::StorageHasKeyInput"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.StorageHasKeyOutput.html\" title=\"struct anoma_shared::vm_memory::StorageHasKeyOutput\">StorageHasKeyOutput</a>","synthetic":false,"types":["anoma_shared::vm_memory::StorageHasKeyOutput"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.StorageWriteInput.html\" title=\"struct anoma_shared::vm_memory::StorageWriteInput\">StorageWriteInput</a>","synthetic":false,"types":["anoma_shared::vm_memory::StorageWriteInput"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.StorageReadSelfInput.html\" title=\"struct anoma_shared::vm_memory::StorageReadSelfInput\">StorageReadSelfInput</a>","synthetic":false,"types":["anoma_shared::vm_memory::StorageReadSelfInput"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.StorageReadSelfOutput.html\" title=\"struct anoma_shared::vm_memory::StorageReadSelfOutput\">StorageReadSelfOutput</a>","synthetic":false,"types":["anoma_shared::vm_memory::StorageReadSelfOutput"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.OtherApprovedInput.html\" title=\"struct anoma_shared::vm_memory::OtherApprovedInput\">OtherApprovedInput</a>","synthetic":false,"types":["anoma_shared::vm_memory::OtherApprovedInput"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"anoma_shared/vm_memory/struct.OtherApprovedOutput.html\" title=\"struct anoma_shared::vm_memory::OtherApprovedOutput\">OtherApprovedOutput</a>","synthetic":false,"types":["anoma_shared::vm_memory::OtherApprovedOutput"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
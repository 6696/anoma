(function() {var implementors = {};
implementors["anoma"] = [{"text":"impl&lt;DB, H&gt; WasmerEnv for <a class=\"struct\" href=\"anoma/vm/host_env/struct.TxEnv.html\" title=\"struct anoma::vm::host_env::TxEnv\">TxEnv</a>&lt;'_, <a class=\"struct\" href=\"anoma/vm/wasm/memory/struct.WasmMemory.html\" title=\"struct anoma::vm::wasm::memory::WasmMemory\">WasmMemory</a>, DB, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DB: <a class=\"trait\" href=\"anoma/ledger/storage/trait.DB.html\" title=\"trait anoma::ledger::storage::DB\">DB</a> + for&lt;'iter&gt; <a class=\"trait\" href=\"anoma/ledger/storage/trait.DBIter.html\" title=\"trait anoma::ledger::storage::DBIter\">DBIter</a>&lt;'iter&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: <a class=\"trait\" href=\"anoma/ledger/storage/trait.StorageHasher.html\" title=\"trait anoma::ledger::storage::StorageHasher\">StorageHasher</a>,&nbsp;</span>","synthetic":false,"types":["anoma::vm::host_env::TxEnv"]},{"text":"impl&lt;DB, H, EVAL&gt; WasmerEnv for <a class=\"struct\" href=\"anoma/vm/host_env/struct.VpEnv.html\" title=\"struct anoma::vm::host_env::VpEnv\">VpEnv</a>&lt;'_, <a class=\"struct\" href=\"anoma/vm/wasm/memory/struct.WasmMemory.html\" title=\"struct anoma::vm::wasm::memory::WasmMemory\">WasmMemory</a>, DB, H, EVAL&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DB: <a class=\"trait\" href=\"anoma/ledger/storage/trait.DB.html\" title=\"trait anoma::ledger::storage::DB\">DB</a> + for&lt;'iter&gt; <a class=\"trait\" href=\"anoma/ledger/storage/trait.DBIter.html\" title=\"trait anoma::ledger::storage::DBIter\">DBIter</a>&lt;'iter&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: <a class=\"trait\" href=\"anoma/ledger/storage/trait.StorageHasher.html\" title=\"trait anoma::ledger::storage::StorageHasher\">StorageHasher</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;EVAL: <a class=\"trait\" href=\"anoma/vm/host_env/trait.VpEvaluator.html\" title=\"trait anoma::vm::host_env::VpEvaluator\">VpEvaluator</a>,&nbsp;</span>","synthetic":false,"types":["anoma::vm::host_env::VpEnv"]},{"text":"impl&lt;MM&gt; WasmerEnv for <a class=\"struct\" href=\"anoma/vm/host_env/struct.MatchmakerEnv.html\" title=\"struct anoma::vm::host_env::MatchmakerEnv\">MatchmakerEnv</a>&lt;<a class=\"struct\" href=\"anoma/vm/wasm/memory/struct.WasmMemory.html\" title=\"struct anoma::vm::wasm::memory::WasmMemory\">WasmMemory</a>, MM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;MM: <a class=\"trait\" href=\"anoma/gossip/mm/trait.MmHost.html\" title=\"trait anoma::gossip::mm::MmHost\">MmHost</a>,&nbsp;</span>","synthetic":false,"types":["anoma::vm::host_env::MatchmakerEnv"]},{"text":"impl WasmerEnv for <a class=\"struct\" href=\"anoma/vm/host_env/struct.FilterEnv.html\" title=\"struct anoma::vm::host_env::FilterEnv\">FilterEnv</a>&lt;<a class=\"struct\" href=\"anoma/vm/wasm/memory/struct.WasmMemory.html\" title=\"struct anoma::vm::wasm::memory::WasmMemory\">WasmMemory</a>&gt;","synthetic":false,"types":["anoma::vm::host_env::FilterEnv"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()